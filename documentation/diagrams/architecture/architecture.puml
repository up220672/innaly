@startuml Architecture Diagram
!theme plain

' ====== Estilos globales pastel ======
skinparam component {
  BackgroundColor #B5EAD7
  BorderColor #82D8B5
  FontColor Black
  FontSize 12
}

skinparam database {
  BackgroundColor #C7CEEA
  BorderColor #9FA8DA
  FontColor Black
  FontSize 12
}

skinparam rectangle {
  BorderColor #CCCCCC
  FontColor Black
  FontSize 12
}

skinparam arrow {
  Color #555555
  Thickness 1.5
}

' ====== Componentes adicionales ======
actor USER as "Frontend/Web/Mobile"

' ====== Componentes ======
package "API Gateway" {
  component GW as "Gateway"
}

package "Microservicios" {
  component AUTH as "Auth Service"
  component ROOM as "Room Service"
  component BOOK as "Booking Service"
  component PAY as "Payment Service"
  component NOTIF as "Notification Service"
  component REPORT as "Reporting Service"
}

package "Bases de Datos" {
  database AUTH_DB as "Auth DB"
  database ROOM_DB as "Room DB"
  database BOOK_DB as "Booking DB"
  database PAY_DB as "Payment DB"
  database REPORT_DB as "Reporting DB"
}

' ====== Relaciones ======
USER --> GW : HTTPS Requests

GW --> ROOM : GET /rooms
GW --> BOOK : POST /bookings
GW --> AUTH : POST /auth/login

' Comunicación directa entre servicios
BOOK --> ROOM : GET /rooms/{id}
BOOK --> PAY : POST /payments
BOOK --> NOTIF : BookingCreated
BOOK --> REPORT : BookingCreated

REPORT --> BOOK : GET /bookings
REPORT --> ROOM : GET /rooms

NOTIF --> AUTH : GET /users/{id}

' Bases de datos
AUTH --> AUTH_DB
ROOM --> ROOM_DB
BOOK --> BOOK_DB
PAY --> PAY_DB
REPORT --> REPORT_DB

' ====== Notas ======
note left of GW
  El API Gateway centraliza el acceso, enruta las peticiones y aplica políticas de seguridad.
end note

@enduml
